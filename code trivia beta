import tkinter as tk
from tkinter import messagebox
import random

# Clase para representar una pregunta
class Question:
    def __init__(self, text, options, correct_answer):
        self.text = text
        self.options = options
        self.correct_answer = correct_answer

    def is_correct(self, answer):
        return answer == self.correct_answer

# Clase principal del juego de trivia
class TriviaGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Juego de Trivia")
        self.score = 0
        self.current_question_index = 0
        self.current_category = None
        self.selected_questions = []

        self.questions = {
            "Videojuegos": [
                Question("¿En qué juego aparece el personaje Master Chief?", ["Halo", "Call of Duty", "Doom", "Quake"], "Halo"),
                Question("¿Cuál es la empresa creadora de Mario?", ["Sony", "Microsoft", "Nintendo", "Sega"], "Nintendo"),
                Question("¿Qué juego popular incluye construir con bloques?", ["Roblox", "Tetris", "Minecraft", "Fortnite"], "Minecraft"),
                Question("¿Qué consola lanzó Nintendo en 2006?", ["Switch", "Wii", "GameCube", "DS"], "Wii"),
                Question("¿Qué juego tiene como protagonista a Kratos?", ["God of War", "Gears of War", "Dark Souls", "Far Cry"], "God of War"),
            ],
            "Series": [
                Question("¿Quién es el protagonista de Breaking Bad?", ["Jesse Pinkman", "Saul Goodman", "Walter White", "Hank Schrader"], "Walter White"),
                Question("¿En qué ciudad ocurre Friends?", ["Los Angeles", "Miami", "Chicago", "Nueva York"], "Nueva York"),
                Question("¿Qué serie tiene dragones y casas nobles?", ["Vikingos", "The Witcher", "Juego de Tronos", "Los Tudor"], "Juego de Tronos"),
                Question("¿Quién es Eleven en Stranger Things?", ["Una científica", "Una niña con poderes", "Una agente secreta", "Una profesora"], "Una niña con poderes"),
                Question("¿Qué serie es un spin-off de Breaking Bad?", ["Dexter", "Narcos", "Better Call Saul", "Ozark"], "Better Call Saul"),
            ],
            "Historia": [
                Question("¿En qué año comenzó la Segunda Guerra Mundial?", ["1914", "1939", "1945", "1929"], "1939"),
                Question("¿Quién descubrió América?", ["Napoleón", "Cristóbal Colón", "Simón Bolívar", "Galileo Galilei"], "Cristóbal Colón"),
                Question("¿Qué imperio construyó el Coliseo?", ["Griego", "Egipcio", "Romano", "Persa"], "Romano"),
                Question("¿Cuál fue la capital del Imperio Inca?", ["Lima", "Cusco", "Quito", "La Paz"], "Cusco"),
                Question("¿Quién fue el primer presidente de EE.UU.?", ["Thomas Jefferson", "Abraham Lincoln", "George Washington", "John Adams"], "George Washington"),
            ],
            "Cultura General": [
                Question("¿Cuál es el idioma más hablado del mundo?", ["Inglés", "Español", "Chino mandarín", "Árabe"], "Chino mandarín"),
                Question("¿Cuál es el planeta más grande del sistema solar?", ["Tierra", "Júpiter", "Saturno", "Neptuno"], "Júpiter"),
                Question("¿Qué gas respiramos para vivir?", ["Hidrógeno", "Oxígeno", "Dióxido de carbono", "Helio"], "Oxígeno"),
                Question("¿Cuántos continentes hay?", ["5", "6", "7", "4"], "7"),
                Question("¿Cuál es la moneda oficial de Japón?", ["Dólar", "Yuan", "Yen", "Won"], "Yen"),
            ],
        }

        self.setup_main_menu()

    def setup_main_menu(self):
        self.clear_window()
        tk.Label(self.root, text="Selecciona una categoría:", font=("Helvetica", 16)).pack(pady=20)

        for category in self.questions.keys():
            tk.Button(self.root, text=category, font=("Helvetica", 14),
                      command=lambda c=category: self.start_game(c)).pack(pady=5)

    def start_game(self, category):
        self.current_category = category
        self.score = 0
        self.current_question_index = 0

        # Elegir solo 5 preguntas al azar para la sesión
        all_questions = self.questions[category]
        self.selected_questions = random.sample(all_questions, k=5)
        self.show_question()

    def show_question(self):
        self.clear_window()

        if self.current_question_index >= len(self.selected_questions):
            self.show_score()
            return

        question = self.selected_questions[self.current_question_index]
        tk.Label(self.root, text=question.text, wraplength=400, font=("Helvetica", 14)).pack(pady=20)

        for option in question.options:
            tk.Button(self.root, text=option, font=("Helvetica", 12),
                      command=lambda opt=option: self.check_answer(opt)).pack(pady=5)

    def check_answer(self, selected_option):
        question = self.selected_questions[self.current_question_index]
        if question.is_correct(selected_option):
            self.score += 1
            messagebox.showinfo("Correcto", "¡Respuesta correcta!")
        else:
            messagebox.showerror("Incorrecto", f"Respuesta incorrecta. Era: {question.correct_answer}")

        self.current_question_index += 1
        self.show_question()

    def show_score(self):
        self.clear_window()
        tk.Label(self.root, text=f"Tu puntuación: {self.score}/5", font=("Helvetica", 16)).pack(pady=20)
        tk.Button(self.root, text="Volver al menú", command=self.setup_main_menu, font=("Helvetica", 14)).pack(pady=10)

    def clear_window(self):
        for widget in self.root.winfo_children():
            widget.destroy()

# Ejecutar la aplicación
if __name__ == "__main__":
    root = tk.Tk()
    root.geometry("500x400")
    game = TriviaGame(root)
    root.mainloop()
